!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABS_FUNCS_H	abs_funcs.h	2;"	d
CONSPA	abs_funcs.c	22;"	d	file:
CONSPB	abs_funcs.c	21;"	d	file:
CONSPD	abs_funcs.c	20;"	d	file:
FD_BOUNDARY_TYPE_ABLEXP	fd_t.h	23;"	d
FD_BOUNDARY_TYPE_CFSPML	fd_t.h	22;"	d
FD_BOUNDARY_TYPE_DPML	fd_t.h	25;"	d
FD_BOUNDARY_TYPE_FREE	fd_t.h	21;"	d
FD_BOUNDARY_TYPE_MPML	fd_t.h	24;"	d
FD_BOUNDARY_TYPE_NONE	fd_t.h	20;"	d
FD_INFO_LENGTH_HALF	fd_t.h	14;"	d
FD_INFO_LENGTH_LEFT	fd_t.h	15;"	d
FD_INFO_LENGTH_RIGTH	fd_t.h	16;"	d
FD_INFO_LENGTH_TOTAL	fd_t.h	13;"	d
FD_INFO_POS_OF_INDX	fd_t.h	12;"	d
FD_INFO_SIZE	fd_t.h	17;"	d
FD_MAX_STRLEN	fd_t.h	9;"	d
FD_NDIM	fd_t.h	7;"	d
FD_NDIM_2	fd_t.h	8;"	d
FD_SLICE_INFO_ID	fd_t.h	28;"	d
FD_SLICE_INFO_INDX	fd_t.h	29;"	d
FD_SNAP_INFO_DI	fd_t.h	38;"	d
FD_SNAP_INFO_DIT	fd_t.h	42;"	d
FD_SNAP_INFO_DJ	fd_t.h	39;"	d
FD_SNAP_INFO_DK	fd_t.h	40;"	d
FD_SNAP_INFO_GI1	fd_t.h	46;"	d
FD_SNAP_INFO_GJ1	fd_t.h	47;"	d
FD_SNAP_INFO_GK1	fd_t.h	48;"	d
FD_SNAP_INFO_I1	fd_t.h	32;"	d
FD_SNAP_INFO_IT1	fd_t.h	41;"	d
FD_SNAP_INFO_J1	fd_t.h	33;"	d
FD_SNAP_INFO_K1	fd_t.h	34;"	d
FD_SNAP_INFO_NI	fd_t.h	35;"	d
FD_SNAP_INFO_NJ	fd_t.h	36;"	d
FD_SNAP_INFO_NK	fd_t.h	37;"	d
FD_SNAP_INFO_SIZE	fd_t.h	49;"	d
FD_SNAP_INFO_STRAIN	fd_t.h	45;"	d
FD_SNAP_INFO_STRESS	fd_t.h	44;"	d
FD_SNAP_INFO_VEL	fd_t.h	43;"	d
FD_T_H	fd_t.h	2;"	d
GD_CURV_H	gd_curv.h	2;"	d
GD_CURV_SEQ_ETX	gd_curv.h	12;"	d
GD_CURV_SEQ_ETY	gd_curv.h	13;"	d
GD_CURV_SEQ_ETZ	gd_curv.h	14;"	d
GD_CURV_SEQ_JAC	gd_curv.h	8;"	d
GD_CURV_SEQ_X3D	gd_curv.h	4;"	d
GD_CURV_SEQ_XIX	gd_curv.h	9;"	d
GD_CURV_SEQ_XIY	gd_curv.h	10;"	d
GD_CURV_SEQ_XIZ	gd_curv.h	11;"	d
GD_CURV_SEQ_Y3D	gd_curv.h	5;"	d
GD_CURV_SEQ_Z3D	gd_curv.h	6;"	d
GD_CURV_SEQ_ZTX	gd_curv.h	15;"	d
GD_CURV_SEQ_ZTY	gd_curv.h	16;"	d
GD_CURV_SEQ_ZTZ	gd_curv.h	17;"	d
IO_FUNCS_H	io_funcs.h	2;"	d
MD_EL_ISO_H	md_el_iso.h	2;"	d
MD_EL_ISO_SEQ_LAMBDA	md_el_iso.h	5;"	d
MD_EL_ISO_SEQ_MU	md_el_iso.h	6;"	d
MD_EL_ISO_SEQ_RHO	md_el_iso.h	4;"	d
M_FD_INDX	fd_t.h	68;"	d
M_FD_NOINDX	fd_t.h	61;"	d
M_FD_SHIFT	fd_t.h	54;"	d
M_NCERR	sv_eliso1st_curv_macdrp.c	27;"	d	file:
M_SRC_IND	src_funcs.h	19;"	d
M_SRC_INFO_NVAL	src_funcs.h	15;"	d
M_SRC_INFO_SEQ_ITBEG	src_funcs.h	12;"	d
M_SRC_INFO_SEQ_ITEND	src_funcs.h	13;"	d
M_SRC_INFO_SEQ_NEXT	src_funcs.h	14;"	d
M_SRC_INFO_SEQ_POS	src_funcs.h	11;"	d
M_SRC_INFO_SEQ_SI	src_funcs.h	8;"	d
M_SRC_INFO_SEQ_SJ	src_funcs.h	9;"	d
M_SRC_INFO_SEQ_SK	src_funcs.h	10;"	d
M_WF_EL_1ST_IND	wf_el_1st.h	17;"	d
PAR_MAX_STRLEN	par_t.h	11;"	d
PAR_TYPE_STRLEN	par_t.h	12;"	d
PAR_T_H	par_t.h	2;"	d
PI	abs_funcs.c	25;"	d	file:
PI	src_funcs.h	5;"	d
SRC_FUNCS_H	src_funcs.h	2;"	d
SV_ELISO1ST_CURV_MACDRP_H	sv_eliso1st_curv_macdrp.h	2;"	d
WF_EL_1ST_H	wf_el_1st.h	2;"	d
WF_EL_1ST_NVAR	wf_el_1st.h	4;"	d
WF_EL_1ST_SEQ_Txx	wf_el_1st.h	9;"	d
WF_EL_1ST_SEQ_Txy	wf_el_1st.h	14;"	d
WF_EL_1ST_SEQ_Txz	wf_el_1st.h	12;"	d
WF_EL_1ST_SEQ_Tyy	wf_el_1st.h	10;"	d
WF_EL_1ST_SEQ_Tyz	wf_el_1st.h	13;"	d
WF_EL_1ST_SEQ_Tzz	wf_el_1st.h	11;"	d
WF_EL_1ST_SEQ_Vx	wf_el_1st.h	6;"	d
WF_EL_1ST_SEQ_Vy	wf_el_1st.h	7;"	d
WF_EL_1ST_SEQ_Vz	wf_el_1st.h	8;"	d
a3d	fd_t.h	/^  float  *a3d; \/\/ auxiliary vars$/;"	m	struct:fd_blk_t
a3d_name	fd_t.h	/^  char  **a3d_name;$/;"	m	struct:fd_blk_t
a3d_num_of_levels	fd_t.h	/^  int     a3d_num_of_levels;$/;"	m	struct:fd_blk_t
a3d_num_of_vars	fd_t.h	/^  int     a3d_num_of_vars;$/;"	m	struct:fd_blk_t
a3d_pos	fd_t.h	/^  size_t *a3d_pos;$/;"	m	struct:fd_blk_t
abs_cal_pml_R	abs_funcs.c	/^abs_cal_pml_R(int N)$/;"	f
abs_cal_pml_a	abs_funcs.c	/^abs_cal_pml_a(float x, float L, float amax)$/;"	f
abs_cal_pml_amax	abs_funcs.c	/^abs_cal_pml_amax(float fc)$/;"	f
abs_cal_pml_b	abs_funcs.c	/^abs_cal_pml_b(float x, float L, float bmax)$/;"	f
abs_cal_pml_d	abs_funcs.c	/^abs_cal_pml_d(float x, float L, float dmax)$/;"	f
abs_cal_pml_dmax	abs_funcs.c	/^abs_cal_pml_dmax(float L, float Vp, float Rpp)$/;"	f
abs_coefs	fd_t.h	/^  float   *abs_coefs; \/\/ all coefs all faces $/;"	m	struct:fd_blk_t
abs_coefs_facepos0	fd_t.h	/^  int      abs_coefs_facepos0[FD_NDIM_2];  \/\/ $/;"	m	struct:fd_blk_t
abs_indx	fd_t.h	/^  int    abs_indx[FD_NDIM_2 * FD_NDIM_2];$/;"	m	struct:fd_blk_t
abs_init_vars_cfspml	abs_funcs.c	/^abs_init_vars_cfspml($/;"	f
abs_itype	fd_t.h	/^  int  abs_itype;$/;"	m	struct:fd_blk_t
abs_num_of_layers	fd_t.h	/^  int  abs_num_of_layers[ FD_NDIM_2 ];$/;"	m	struct:fd_blk_t
abs_num_of_layers	par_t.h	/^  int   abs_num_of_layers[FD_NDIM_2];$/;"	m	struct:par_t
abs_set_cfspml	abs_funcs.c	/^abs_set_cfspml($/;"	f
abs_vars	fd_t.h	/^  float   *abs_vars; \/\/  order: vars_one_block -> all block -> one level -> 4 levels$/;"	m	struct:fd_blk_t
abs_vars_facepos0	fd_t.h	/^  int     abs_vars_facepos0[FD_NDIM_2]; \/\/ start pos of each blk in first level; other level similar$/;"	m	struct:fd_blk_t
abs_vars_size_per_level	fd_t.h	/^  int     abs_vars_size_per_level; \/\/ size of vars per level$/;"	m	struct:fd_blk_t
abs_vars_volsiz	fd_t.h	/^  int     abs_vars_volsiz[FD_NDIM_2]; \/\/ size of single var in abs_blk_vars for each block$/;"	m	struct:fd_blk_t
boundary_itype	fd_t.h	/^  int boundary_itype[ FD_NDIM_2 ];$/;"	m	struct:fd_blk_t
boundary_type_name	par_t.h	/^  char **boundary_type_name;$/;"	m	struct:par_t
c3d	fd_t.h	/^  float  *c3d; \/\/ grid 3d vars$/;"	m	struct:fd_blk_t
c3d_name	fd_t.h	/^  char  **c3d_name;$/;"	m	struct:fd_blk_t
c3d_num_of_vars	fd_t.h	/^  int     c3d_num_of_vars;$/;"	m	struct:fd_blk_t
c3d_pos	fd_t.h	/^  size_t *c3d_pos; \/\/ postion 0 for each var$/;"	m	struct:fd_blk_t
cal_norm_delt3d	src_funcs.c	/^cal_norm_delt3d(float *delt, float x0, float y0, float z0, float rx0, float ry0, float rz0, int LenDelt)$/;"	f
cartesian_grid_origin	par_t.h	/^  float cartesian_grid_origin[FD_NDIM];$/;"	m	struct:par_t
cartesian_grid_stepsize	par_t.h	/^  float cartesian_grid_stepsize[FD_NDIM];$/;"	m	struct:par_t
cfspml_alpha_max	par_t.h	/^  float cfspml_alpha_max[FD_NDIM_2];$/;"	m	struct:par_t
cfspml_beta_max	par_t.h	/^  float cfspml_beta_max[FD_NDIM_2];$/;"	m	struct:par_t
cfspml_velocity	par_t.h	/^  float cfspml_velocity[FD_NDIM_2];$/;"	m	struct:par_t
check_nan_every_nummber_of_steps	par_t.h	/^  int check_nan_every_nummber_of_steps;$/;"	m	struct:par_t
conn_out_blk	fd_t.h	/^  int *conn_out_blk;$/;"	m	struct:fd_blk_t
conn_out_indx	fd_t.h	/^  int *conn_out_indx;$/;"	m	struct:fd_blk_t
conn_this_indx	fd_t.h	/^  int *conn_this_indx;$/;"	m	struct:fd_blk_t
coord_by_cartesian	par_t.h	/^  int  coord_by_cartesian;$/;"	m	struct:par_t
coord_by_import	par_t.h	/^  int  coord_by_import;$/;"	m	struct:par_t
coord_by_refine	par_t.h	/^  int  coord_by_refine;$/;"	m	struct:par_t
coord_by_vmap	par_t.h	/^  int  coord_by_vmap;$/;"	m	struct:par_t
coord_name	fd_t.h	/^  char **coord_name;$/;"	m	struct:fd_blk_t
fd_blk_init	fd_t.c	/^fd_blk_init(struct fd_blk_t *blk,$/;"	f
fd_blk_init_mpi_mesg	fd_t.c	/^fd_blk_init_mpi_mesg(struct fd_blk_t *blk,$/;"	f
fd_blk_pack_mesg	fd_t.c	/^fd_blk_pack_mesg(float *restrict w_cur,float *restrict sbuff,$/;"	f
fd_blk_print	fd_t.c	/^fd_blk_print(struct fd_blk_t *blk)$/;"	f
fd_blk_set_inline	fd_t.c	/^fd_blk_set_inline(struct fd_blk_t *blk,$/;"	f
fd_blk_set_slice	fd_t.c	/^fd_blk_set_slice(struct fd_blk_t *blk,$/;"	f
fd_blk_set_snapshot	fd_t.c	/^fd_blk_set_snapshot(struct fd_blk_t *blk,$/;"	f
fd_blk_set_sta	fd_t.c	/^fd_blk_set_sta(struct fd_blk_t *blk)$/;"	f
fd_blk_t	fd_t.h	/^struct fd_blk_t$/;"	s
fd_blk_unpack_mesg	fd_t.c	/^fd_blk_unpack_mesg(float *restrict rbuff,float *restrict w_cur,$/;"	f
fd_coef	fd_t.h	/^  float  *fd_coef;$/;"	m	struct:fd_t
fd_half_len	fd_t.h	/^  int     fd_half_len;$/;"	m	struct:fd_t
fd_indx	fd_t.h	/^  int    *fd_indx;$/;"	m	struct:fd_t
fd_len	fd_t.h	/^  int     fd_len;$/;"	m	struct:fd_t
fd_nghosts	fd_t.h	/^  int     fd_nghosts;$/;"	m	struct:fd_t
fd_print	fd_t.c	/^fd_print(struct fd_t *fd)$/;"	f
fd_set_macdrp	fd_t.c	/^fd_set_macdrp(struct fd_t *fd)$/;"	f
fd_t	fd_t.h	/^struct fd_t{$/;"	s
fdx_all_coef	fd_t.h	/^  float  **fdx_all_coef;$/;"	m	struct:fd_t
fdx_all_indx	fd_t.h	/^  int    **fdx_all_indx;$/;"	m	struct:fd_t
fdx_all_info	fd_t.h	/^  int    **fdx_all_info; \/\/ [k2free][pos, total, half, left, right]$/;"	m	struct:fd_t
fdx_max_half_len	fd_t.h	/^  int fdx_max_half_len;$/;"	m	struct:fd_t
fdx_max_len	fd_t.h	/^  int fdx_max_len;$/;"	m	struct:fd_t
fdx_nghosts	fd_t.h	/^  int fdx_nghosts;$/;"	m	struct:fd_t
fdx_num_surf_lay	fd_t.h	/^  int fdx_num_surf_lay;$/;"	m	struct:fd_t
fdy_all_coef	fd_t.h	/^  float  **fdy_all_coef;$/;"	m	struct:fd_t
fdy_all_indx	fd_t.h	/^  int    **fdy_all_indx;$/;"	m	struct:fd_t
fdy_all_info	fd_t.h	/^  int    **fdy_all_info;$/;"	m	struct:fd_t
fdy_max_half_len	fd_t.h	/^  int fdy_max_half_len;$/;"	m	struct:fd_t
fdy_max_len	fd_t.h	/^  int fdy_max_len;$/;"	m	struct:fd_t
fdy_nghosts	fd_t.h	/^  int fdy_nghosts;$/;"	m	struct:fd_t
fdy_num_surf_lay	fd_t.h	/^  int fdy_num_surf_lay;$/;"	m	struct:fd_t
fdz_all_coef	fd_t.h	/^  float  **fdz_all_coef;$/;"	m	struct:fd_t
fdz_all_indx	fd_t.h	/^  int    **fdz_all_indx;$/;"	m	struct:fd_t
fdz_all_info	fd_t.h	/^  int    **fdz_all_info;$/;"	m	struct:fd_t
fdz_max_half_len	fd_t.h	/^  int fdz_max_half_len;$/;"	m	struct:fd_t
fdz_max_len	fd_t.h	/^  int fdz_max_len;$/;"	m	struct:fd_t
fdz_nghosts	fd_t.h	/^  int fdz_nghosts;$/;"	m	struct:fd_t
fdz_num_surf_lay	fd_t.h	/^  int fdz_num_surf_lay;$/;"	m	struct:fd_t
filtx_all_coef	fd_t.h	/^  float  **filtx_all_coef;$/;"	m	struct:fd_t
filtx_all_indx	fd_t.h	/^  int    **filtx_all_indx;$/;"	m	struct:fd_t
filtx_all_info	fd_t.h	/^  int    **filtx_all_info; \/\/ [k2free][pos, total, half, left, right] $/;"	m	struct:fd_t
filty_all_coef	fd_t.h	/^  float  **filty_all_coef;$/;"	m	struct:fd_t
filty_all_indx	fd_t.h	/^  int    **filty_all_indx;$/;"	m	struct:fd_t
filty_all_info	fd_t.h	/^  int    **filty_all_info;$/;"	m	struct:fd_t
filtz_all_coef	fd_t.h	/^  float  **filtz_all_coef;$/;"	m	struct:fd_t
filtz_all_indx	fd_t.h	/^  int    **filtz_all_indx;$/;"	m	struct:fd_t
filtz_all_info	fd_t.h	/^  int    **filtz_all_info;$/;"	m	struct:fd_t
force_info	fd_t.h	/^  int    *force_info; \/\/ num_of_force * 6 : si,sj,sk,start_pos_in_stf,start_it, end_it$/;"	m	struct:fd_blk_t
force_vec_stf	fd_t.h	/^  float  *force_vec_stf;$/;"	m	struct:fd_blk_t
fun_gauss	src_funcs.c	/^fun_gauss(float t, float a, float t0)$/;"	f
fun_ricker	src_funcs.c	/^fun_ricker(float t, float fc, float t0)$/;"	f
g3d	fd_t.h	/^  float  *g3d; \/\/ grid 3d vars$/;"	m	struct:fd_blk_t
g3d_name	fd_t.h	/^  char  **g3d_name;$/;"	m	struct:fd_blk_t
g3d_num_of_vars	fd_t.h	/^  int     g3d_num_of_vars;$/;"	m	struct:fd_blk_t
g3d_pos	fd_t.h	/^  size_t *g3d_pos; \/\/ postion 0 for each var$/;"	m	struct:fd_blk_t
gd_curv_cal_metric	gd_curv.c	/^gd_curv_cal_metric($/;"	f
gd_curv_coord_export	gd_curv.c	/^gd_curv_coord_export(float  *restrict c3d,$/;"	f
gd_curv_coord_import	gd_curv.c	/^gd_curv_coord_import(float *restrict g3d, size_t *restrict g3d_pos, char **restrict g3d_name,$/;"	f
gd_curv_gen_cart	gd_curv.c	/^gd_curv_gen_cart($/;"	f
gd_curv_init_c3d	gd_curv.c	/^gd_curv_init_c3d($/;"	f
gd_curv_init_g3d	gd_curv.c	/^gd_curv_init_g3d($/;"	f
gd_curv_metric_export	gd_curv.c	/^gd_curv_metric_export(float  *restrict g3d,$/;"	f
gd_curv_metric_import	gd_curv.c	/^gd_curv_metric_import(float *restrict g3d, size_t *restrict g3d_pos, char **restrict g3d_name,$/;"	f
gni1	fd_t.h	/^  int gni1, gnj1, gnk1; \/\/ global index$/;"	m	struct:fd_blk_t
gni2	fd_t.h	/^  int gni2, gnj2, gnk2; \/\/ global index$/;"	m	struct:fd_blk_t
gnj1	fd_t.h	/^  int gni1, gnj1, gnk1; \/\/ global index$/;"	m	struct:fd_blk_t
gnj2	fd_t.h	/^  int gni2, gnj2, gnk2; \/\/ global index$/;"	m	struct:fd_blk_t
gnk1	fd_t.h	/^  int gni1, gnj1, gnk1; \/\/ global index$/;"	m	struct:fd_blk_t
gnk2	fd_t.h	/^  int gni2, gnj2, gnk2; \/\/ global index$/;"	m	struct:fd_blk_t
inline_fname	fd_t.h	/^  char  **inline_fname;$/;"	m	struct:fd_blk_t
inline_num	fd_t.h	/^  int    *inline_num;$/;"	m	struct:fd_blk_t
inline_pos	fd_t.h	/^  int    *inline_pos;$/;"	m	struct:fd_blk_t
input_grid_file	par_t.h	/^  char input_grid_file[PAR_MAX_STRLEN];$/;"	m	struct:par_t
input_grid_type	par_t.h	/^  char input_grid_type[PAR_TYPE_STRLEN];$/;"	m	struct:par_t
input_medium_type	par_t.h	/^  char input_medium_type[PAR_TYPE_STRLEN];$/;"	m	struct:par_t
input_metric_type	par_t.h	/^  char input_metric_type[PAR_TYPE_STRLEN];$/;"	m	struct:par_t
input_receiver_file	par_t.h	/^  char input_receiver_file[PAR_MAX_STRLEN];$/;"	m	struct:par_t
input_source_file	par_t.h	/^  char input_source_file[PAR_MAX_STRLEN];$/;"	m	struct:par_t
interp_out_blk	fd_t.h	/^  int *interp_out_blk;$/;"	m	struct:fd_blk_t
interp_out_dxyz	fd_t.h	/^  float *interp_out_dxyz;$/;"	m	struct:fd_blk_t
interp_out_indx	fd_t.h	/^  int *interp_out_indx;$/;"	m	struct:fd_blk_t
interp_this_indx	fd_t.h	/^  int *interp_this_indx;$/;"	m	struct:fd_blk_t
io_build_fname	io_funcs.c	/^io_build_fname(char *out_dir,$/;"	f
io_build_fname_time	io_funcs.c	/^io_build_fname_time(char *out_dir,$/;"	f
io_snapshot_export	io_funcs.c	/^io_snapshot_export(char *fname,$/;"	f
io_var3d_export_nc	io_funcs.c	/^io_var3d_export_nc(char   *ou_file,$/;"	f
log_file_name	par_t.h	/^  char log_file_name[PAR_MAX_STRLEN];$/;"	m	struct:par_t
m3d	fd_t.h	/^  float  *m3d; \/\/ media 3d vars$/;"	m	struct:fd_blk_t
m3d_name	fd_t.h	/^  char  **m3d_name;$/;"	m	struct:fd_blk_t
m3d_num_of_vars	fd_t.h	/^  int     m3d_num_of_vars;$/;"	m	struct:fd_blk_t
m3d_pos	fd_t.h	/^  size_t *m3d_pos;$/;"	m	struct:fd_blk_t
m_mac_all_coef_size	fd_t.c	56;"	d	file:
m_mac_center_all_coef_size	fd_t.c	106;"	d	file:
m_mac_max_half_stentil	fd_t.c	55;"	d	file:
main	cgfdm3d_elastic_main.c	/^int main(int argc, char** argv)$/;"	f
matVx2Vz	fd_t.h	/^  float *matVx2Vz, *matVy2Vz;$/;"	m	struct:fd_blk_t
matVy2Vz	fd_t.h	/^  float *matVx2Vz, *matVy2Vz;$/;"	m	struct:fd_blk_t
md_el_iso_gen_test	md_el_iso.c	/^md_el_iso_gen_test($/;"	f
md_el_iso_import	md_el_iso.c	/^md_el_iso_import(float *restrict m3d, size_t *restrict m3d_pos, char **restrict m3d_name,$/;"	f
md_el_iso_init_vars	md_el_iso.c	/^md_el_iso_init_vars($/;"	f
md_el_iso_rho_to_slow	md_el_iso.c	/^md_el_iso_rho_to_slow(float *restrict m3d, size_t siz_volume)$/;"	f
medium_by_import	par_t.h	/^  int medium_by_import;$/;"	m	struct:par_t
metric_by_import	par_t.h	/^  int  metric_by_import;$/;"	m	struct:par_t
moment_ext_coef	fd_t.h	/^  float  *moment_ext_coef;$/;"	m	struct:fd_blk_t
moment_ext_indx	fd_t.h	/^  int    *moment_ext_indx;$/;"	m	struct:fd_blk_t
moment_info	fd_t.h	/^  int    *moment_info; \/\/ num_of_force * 7 : si,sj,sk,start_pos_in_rate,start_it, end_it, n_ext$/;"	m	struct:fd_blk_t
moment_ten_rate	fd_t.h	/^  float  *moment_ten_rate; \/\/ stage, it, Mij, num$/;"	m	struct:fd_blk_t
myid2	fd_t.h	/^  int    myid2[2];$/;"	m	struct:fd_blk_t
name	fd_t.h	/^  char name[FD_MAX_STRLEN];$/;"	m	struct:fd_blk_t
neighid	fd_t.h	/^  int    neighid[4];$/;"	m	struct:fd_blk_t
ni	fd_t.h	/^  int ni1, ni2, nj1, nj2, nk1, nk2, ni, nj, nk;$/;"	m	struct:fd_blk_t
ni1	fd_t.h	/^  int ni1, ni2, nj1, nj2, nk1, nk2, ni, nj, nk;$/;"	m	struct:fd_blk_t
ni2	fd_t.h	/^  int ni1, ni2, nj1, nj2, nk1, nk2, ni, nj, nk;$/;"	m	struct:fd_blk_t
nj	fd_t.h	/^  int ni1, ni2, nj1, nj2, nk1, nk2, ni, nj, nk;$/;"	m	struct:fd_blk_t
nj1	fd_t.h	/^  int ni1, ni2, nj1, nj2, nk1, nk2, ni, nj, nk;$/;"	m	struct:fd_blk_t
nj2	fd_t.h	/^  int ni1, ni2, nj1, nj2, nk1, nk2, ni, nj, nk;$/;"	m	struct:fd_blk_t
nk	fd_t.h	/^  int ni1, ni2, nj1, nj2, nk1, nk2, ni, nj, nk;$/;"	m	struct:fd_blk_t
nk1	fd_t.h	/^  int ni1, ni2, nj1, nj2, nk1, nk2, ni, nj, nk;$/;"	m	struct:fd_blk_t
nk2	fd_t.h	/^  int ni1, ni2, nj1, nj2, nk1, nk2, ni, nj, nk;$/;"	m	struct:fd_blk_t
num_of_conn_points	fd_t.h	/^  int num_of_conn_points;$/;"	m	struct:fd_blk_t
num_of_force	fd_t.h	/^  int     num_of_force;$/;"	m	struct:fd_blk_t
num_of_inline	fd_t.h	/^  int     num_of_inline; \/\/ for writing to file$/;"	m	struct:fd_blk_t
num_of_interp_points	fd_t.h	/^  int num_of_interp_points;$/;"	m	struct:fd_blk_t
num_of_moment	fd_t.h	/^  int     num_of_moment;$/;"	m	struct:fd_blk_t
num_of_pairs	fd_t.h	/^  int num_of_pairs;$/;"	m	struct:fd_t
num_of_point	fd_t.h	/^  int     num_of_point;  \/\/ for saving in solver$/;"	m	struct:fd_blk_t
num_of_slice_x	fd_t.h	/^  int     num_of_slice_x;$/;"	m	struct:fd_blk_t
num_of_slice_y	fd_t.h	/^  int     num_of_slice_y;$/;"	m	struct:fd_blk_t
num_of_slice_z	fd_t.h	/^  int     num_of_slice_z;$/;"	m	struct:fd_blk_t
num_of_snap	fd_t.h	/^  int     num_of_snap;$/;"	m	struct:fd_blk_t
num_of_sta	fd_t.h	/^  int     num_of_sta;$/;"	m	struct:fd_blk_t
num_rk_stages	fd_t.h	/^  int num_rk_stages;$/;"	m	struct:fd_t
number_of_btye	fd_t.h	/^  size_t number_of_btye;$/;"	m	struct:fd_blk_t
number_of_float	fd_t.h	/^  size_t number_of_float;$/;"	m	struct:fd_blk_t
number_of_mpiprocs_x	par_t.h	/^  int number_of_mpiprocs_x;$/;"	m	struct:par_t
number_of_mpiprocs_y	par_t.h	/^  int number_of_mpiprocs_y;$/;"	m	struct:par_t
number_of_receiver_line	par_t.h	/^  int number_of_receiver_line;$/;"	m	struct:par_t
number_of_slice_x	par_t.h	/^  int number_of_slice_x;$/;"	m	struct:par_t
number_of_slice_y	par_t.h	/^  int number_of_slice_y;$/;"	m	struct:par_t
number_of_slice_z	par_t.h	/^  int number_of_slice_z;$/;"	m	struct:par_t
number_of_snapshot	par_t.h	/^  int number_of_snapshot;$/;"	m	struct:par_t
number_of_time_steps	par_t.h	/^  int   number_of_time_steps;$/;"	m	struct:par_t
number_of_total_grid_points_x	par_t.h	/^  int  number_of_total_grid_points_x;$/;"	m	struct:par_t
number_of_total_grid_points_y	par_t.h	/^  int  number_of_total_grid_points_y;$/;"	m	struct:par_t
number_of_total_grid_points_z	par_t.h	/^  int  number_of_total_grid_points_z;$/;"	m	struct:par_t
nx	fd_t.h	/^  int nx, ny, nz;$/;"	m	struct:fd_blk_t
ny	fd_t.h	/^  int nx, ny, nz;$/;"	m	struct:fd_blk_t
nz	fd_t.h	/^  int nx, ny, nz;$/;"	m	struct:fd_blk_t
output_all	par_t.h	/^  int output_all;$/;"	m	struct:par_t
output_dir	fd_t.h	/^  char output_dir[FD_MAX_STRLEN];$/;"	m	struct:fd_blk_t
output_dir	par_t.h	/^  char output_dir   [PAR_MAX_STRLEN];$/;"	m	struct:par_t
output_fname_part	fd_t.h	/^  char output_fname_part[FD_MAX_STRLEN];$/;"	m	struct:fd_blk_t
pair_fdx_all_coef	fd_t.h	/^  float   ***pair_fdx_all_coef;$/;"	m	struct:fd_t
pair_fdx_all_indx	fd_t.h	/^  int     ***pair_fdx_all_indx;  \/\/ [pair][stage][1-10 ele], not include [hlen] due to different length$/;"	m	struct:fd_t
pair_fdx_all_info	fd_t.h	/^  int    ****pair_fdx_all_info;  \/\/ [pair][stage][k2free][pos, total, half, left, right]$/;"	m	struct:fd_t
pair_fdy_all_coef	fd_t.h	/^  float   ***pair_fdy_all_coef;$/;"	m	struct:fd_t
pair_fdy_all_indx	fd_t.h	/^  int     ***pair_fdy_all_indx; $/;"	m	struct:fd_t
pair_fdy_all_info	fd_t.h	/^  int    ****pair_fdy_all_info; $/;"	m	struct:fd_t
pair_fdz_all_coef	fd_t.h	/^  float   ***pair_fdz_all_coef;$/;"	m	struct:fd_t
pair_fdz_all_indx	fd_t.h	/^  int     ***pair_fdz_all_indx;$/;"	m	struct:fd_t
pair_fdz_all_info	fd_t.h	/^  int    ****pair_fdz_all_info;$/;"	m	struct:fd_t
par_mpi_get	par_t.c	/^par_mpi_get(char *par_fname, int myid, MPI_Comm comm, struct par_t *par, int verbose)$/;"	f
par_print	par_t.c	/^par_print(struct par_t *par)$/;"	f
par_read_from_file	par_t.c	/^par_read_from_file(char *par_fname, int myid, MPI_Comm comm, struct par_t *par, int verbose)$/;"	f
par_read_from_str	par_t.c	/^par_read_from_str(const char *str, struct par_t *par)$/;"	f
par_t	par_t.h	/^struct par_t{$/;"	s
point_loc_point	fd_t.h	/^  int    *point_loc_point;$/;"	m	struct:fd_blk_t
point_seismo	fd_t.h	/^  float  *point_seismo;$/;"	m	struct:fd_blk_t
r_reqs	fd_t.h	/^  MPI_Request r_reqs[4];$/;"	m	struct:fd_blk_t
rbuff	fd_t.h	/^  float *rbuff;$/;"	m	struct:fd_blk_t
receiver_line_count	par_t.h	/^  int *receiver_line_count;$/;"	m	struct:par_t
receiver_line_index_incre	par_t.h	/^  int *receiver_line_index_incre;$/;"	m	struct:par_t
receiver_line_index_start	par_t.h	/^  int *receiver_line_index_start;$/;"	m	struct:par_t
receiver_line_name	par_t.h	/^  char **receiver_line_name;$/;"	m	struct:par_t
rk_a	fd_t.h	/^  float *rk_a;$/;"	m	struct:fd_t
rk_b	fd_t.h	/^  float *rk_b;$/;"	m	struct:fd_t
s_reqs	fd_t.h	/^  MPI_Request s_reqs[4];$/;"	m	struct:fd_blk_t
sbuff	fd_t.h	/^  float *sbuff;$/;"	m	struct:fd_blk_t
siz_line	fd_t.h	/^  size_t siz_line;$/;"	m	struct:fd_blk_t
siz_slice	fd_t.h	/^  size_t siz_slice;$/;"	m	struct:fd_blk_t
siz_volume	fd_t.h	/^  size_t siz_volume; \/\/ number of points per var$/;"	m	struct:fd_blk_t
size_of_time_step	par_t.h	/^  float size_of_time_step ;$/;"	m	struct:par_t
slice_x_fname	fd_t.h	/^  char  **slice_x_fname;$/;"	m	struct:fd_blk_t
slice_x_index	par_t.h	/^  int *slice_x_index;$/;"	m	struct:par_t
slice_x_indx	fd_t.h	/^  int*    slice_x_indx;$/;"	m	struct:fd_blk_t
slice_y_fname	fd_t.h	/^  char  **slice_y_fname;$/;"	m	struct:fd_blk_t
slice_y_index	par_t.h	/^  int *slice_y_index;$/;"	m	struct:par_t
slice_y_indx	fd_t.h	/^  int*    slice_y_indx;$/;"	m	struct:fd_blk_t
slice_z_fname	fd_t.h	/^  char  **slice_z_fname;$/;"	m	struct:fd_blk_t
slice_z_index	par_t.h	/^  int *slice_z_index;$/;"	m	struct:par_t
slice_z_indx	fd_t.h	/^  int*    slice_z_indx;$/;"	m	struct:fd_blk_t
snap_fname	fd_t.h	/^  char  **snap_fname;$/;"	m	struct:fd_blk_t
snap_info	fd_t.h	/^  int    *snap_info;$/;"	m	struct:fd_blk_t
snapshot_index_count	par_t.h	/^  int *snapshot_index_count;$/;"	m	struct:par_t
snapshot_index_incre	par_t.h	/^  int *snapshot_index_incre;$/;"	m	struct:par_t
snapshot_index_start	par_t.h	/^  int *snapshot_index_start;$/;"	m	struct:par_t
snapshot_name	par_t.h	/^  char **snapshot_name;$/;"	m	struct:par_t
snapshot_save_strain	par_t.h	/^  int *snapshot_save_strain;$/;"	m	struct:par_t
snapshot_save_stress	par_t.h	/^  int *snapshot_save_stress;$/;"	m	struct:par_t
snapshot_save_velocity	par_t.h	/^  int *snapshot_save_velocity;$/;"	m	struct:par_t
snapshot_time_incre	par_t.h	/^  int *snapshot_time_incre;$/;"	m	struct:par_t
snapshot_time_start	par_t.h	/^  int *snapshot_time_start;$/;"	m	struct:par_t
src_gen_test	src_funcs.c	/^src_gen_test($/;"	f
src_gen_test_gauss	src_funcs.c	/^src_gen_test_gauss($/;"	f
src_get_stage_stf	src_funcs.c	/^src_get_stage_stf($/;"	f
sta_loc_dxyz	fd_t.h	/^  float  *sta_loc_dxyz;$/;"	m	struct:fd_blk_t
sta_loc_point	fd_t.h	/^  int    *sta_loc_point;$/;"	m	struct:fd_blk_t
sta_seismo	fd_t.h	/^  float  *sta_seismo;$/;"	m	struct:fd_blk_t
sv_eliso1st_curv_macdrp_allstep	sv_eliso1st_curv_macdrp.c	/^sv_eliso1st_curv_macdrp_allstep($/;"	f
sv_eliso1st_curv_macdrp_onestage	sv_eliso1st_curv_macdrp.c	/^sv_eliso1st_curv_macdrp_onestage($/;"	f
sv_eliso1st_curv_macdrp_rhs_cfspml	sv_eliso1st_curv_macdrp.c	/^sv_eliso1st_curv_macdrp_rhs_cfspml($/;"	f
sv_eliso1st_curv_macdrp_rhs_cfspml_vfree_z2	sv_eliso1st_curv_macdrp.c	/^sv_eliso1st_curv_macdrp_rhs_cfspml_vfree_z2($/;"	f
sv_eliso1st_curv_macdrp_rhs_inner	sv_eliso1st_curv_macdrp.c	/^sv_eliso1st_curv_macdrp_rhs_inner($/;"	f
sv_eliso1st_curv_macdrp_rhs_src	sv_eliso1st_curv_macdrp.c	/^sv_eliso1st_curv_macdrp_rhs_src($/;"	f
sv_eliso1st_curv_macdrp_rhs_timg_z2	sv_eliso1st_curv_macdrp.c	/^sv_eliso1st_curv_macdrp_rhs_timg_z2($/;"	f
sv_eliso1st_curv_macdrp_rhs_vlow_z2	sv_eliso1st_curv_macdrp.c	/^sv_eliso1st_curv_macdrp_rhs_vlow_z2($/;"	f
sv_eliso1st_curv_macdrp_snap_buff	sv_eliso1st_curv_macdrp.c	/^sv_eliso1st_curv_macdrp_snap_buff(float *restrict var,$/;"	f
sv_eliso1st_curv_macdrp_snap_buff_strain	sv_eliso1st_curv_macdrp.c	/^sv_eliso1st_curv_macdrp_snap_buff_strain(float *restrict var,$/;"	f
sv_eliso1st_curv_macdrp_vel_dxy2dz	sv_eliso1st_curv_macdrp.c	/^sv_eliso1st_curv_macdrp_vel_dxy2dz($/;"	f
time_end	par_t.h	/^  float time_end  ;$/;"	m	struct:par_t
time_end_index	par_t.h	/^  int   time_end_index;$/;"	m	struct:par_t
time_start	par_t.h	/^  float time_start;$/;"	m	struct:par_t
time_start_index	par_t.h	/^  int   time_start_index;$/;"	m	struct:par_t
topocomm	fd_t.h	/^  MPI_Comm    topocomm;$/;"	m	struct:fd_blk_t
w3d	fd_t.h	/^  float  *w3d; \/\/ wavefield 3d vars$/;"	m	struct:fd_blk_t
w3d_name	fd_t.h	/^  char  **w3d_name;$/;"	m	struct:fd_blk_t
w3d_num_of_levels	fd_t.h	/^  int     w3d_num_of_levels;;$/;"	m	struct:fd_blk_t
w3d_num_of_vars	fd_t.h	/^  int     w3d_num_of_vars;$/;"	m	struct:fd_blk_t
w3d_pos	fd_t.h	/^  size_t *w3d_pos; \/\/ pos of 0 elem for each vars in one level$/;"	m	struct:fd_blk_t
wf_el_1st_check_value	wf_el_1st.c	/^wf_el_1st_check_value(float *restrict w, size_t siz_volume)$/;"	f
wf_el_1st_getptr_Vx	wf_el_1st.h	/^wf_el_1st_getptr_Vx(float *restrict w, size_t siz_volume)$/;"	f
wf_el_1st_getptr_Vz	wf_el_1st.h	/^wf_el_1st_getptr_Vz(float *restrict w, size_t siz_volume)$/;"	f
wf_el_1st_init_vars	wf_el_1st.c	/^wf_el_1st_init_vars($/;"	f
